{% extends "::base.html.twig" %}

{% block body %}
    <h2>Cartographie des évènements</h2>

    <div id="locationField">
        <input id="autocomplete" placeholder="Chercher une adresse..." type="text">
    </div>

    <div>
        <form action="{{ path('create_location') }}" method="POST">
            {{ form_start(formLocation) }}

            {{ form_end(formLocation) }}
        </form>
    </div>

    <div id="map"></div>

    <div>
        {{ form_start(formEvent) }}
        {{ form_label(formEvent.name) }}
        {{ form_widget(formEvent.name) }}

        {{ form_label(formEvent.location) }}
        {{ form_widget(formEvent.location) }}

        {{ form_label(formEvent.icon) }}
        {{ form_widget(formEvent.icon) }}
        {{ form_end(formEvent) }}
    </div>

{% endblock %}

{% block javascripts %}
    {{ parent() }}

    <script async defer
            src="https://maps.googleapis.com/maps/api/js?key=AIzaSyAd4Poy6TmjkrC8AHTeL7XX6aLS4Pyz45I&libraries=geometry,places&callback=initMap">
    </script>

    <script>
        var map, infowindow, locations, autocomplete;

        function initMap() {
            settings = {
                lat: 47.6425875,
                lng: 6.844186600000057,
                zoom: 8
            };
            map = new google.maps.Map(document.getElementById('map'), {
                zoom: settings.zoom,
                center: {lat: settings.lat, lng: settings.lng}
            });
            infowindow = new google.maps.InfoWindow({
                content: "No data available"
            });
            setMarkers(map);

            var options = {
                types: ['geocode']
            };
            autocomplete = new google.maps.places.Autocomplete(
                (document.getElementById('autocomplete')),
                options
            );
            autocomplete.addListener('place_changed', placeSearchResult);
        }

        function setMarkers(map) {
            axios.get('http://local.sf3.com/app_dev.php/api/location/list').then(function (response) {
                locations = JSON.parse(response.data);

                var iconUrl = "{{ asset('/images/map/') }}";
                var iconFile = iconUrl+"default-marker.svg";

                for (var i = 0; i < locations.length; i++) {
                    var loc = locations[i];
                    var latLng = new google.maps.LatLng(loc.latitude, loc.longitude);
                    if (loc.icon_for_google_map !== null && loc.icon_for_google_map !== ''){
                        iconFile = iconUrl+loc.icon_for_google_map;
                    }else {
                        iconFile = iconUrl+"default-marker.svg";
                    }
                    var icon = {
                        url: iconFile,
                        scaledSize: new google.maps.Size(30, 30),
                    };
                    var marker = new google.maps.Marker({
                        position: latLng,
                        map: map,
                        id_location: loc.id,
                        content: loc.events,
                        icon: icon,
                        scaledSize: new google.maps.Size(50, 50)
                    });
                    google.maps.event.addListener(marker, 'click', showInfoWindow);
                }
            }).catch(function (error) {
                console.log(error);
            });
        }

        function showInfoWindow() {
            // this refers to marker instance
            var div = document.createElement('div');
            var ul = document.createElement('ul');
            div.appendChild(ul);
            for (var i = 0; i < this.content.length; i++) {
                var li = document.createElement('li');
                li.innerHTML = this.content[i].name;
                ul.append(li)
            }

            // var html = "<h3>"+this.content[0].name+"</h3>";
            infowindow.setContent(div);
            infowindow.open(map, this);
        }

        function placeSearchResult() {
            // Get the place details from the autocomplete object.
            var place = autocomplete.getPlace();
            var lat = place.geometry.location.lat();
            var lng = place.geometry.location.lng();
            var addressName = place.formatted_address;
            // Remplir le formulaire avec les infos (lat et lng sont cachés de l'utilisateur)
            $('#location_latitude').val(lat);
            $('#location_longitude').val(lng);
            $('#location_addressName').val(addressName);
            // Centrer la map sur ce que cherche l'utilisateur
            var myLatlng2 = new google.maps.LatLng(
                lat,
                lng
            );
            map.setCenter(myLatlng2);
        }
    </script>
{% endblock %}